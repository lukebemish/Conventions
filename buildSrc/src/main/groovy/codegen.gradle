import org.tomlj.Toml

tasks.register('generateGroovy', Copy) {
    from 'src/template/groovy'
    def outDir = "${layout.buildDirectory.get()}/generated/sources/versionCatalog/groovy"
    into outDir
    doLast {
        def toml = Toml.parse(file('gradle/libs.versions.toml').toPath())
        def sb = new StringBuilder()

        def versions = toml.get("versions").toMap()
        versions.each { k, v ->
            sb.append("\n        builder.version('${k}', '${v}')")
        }

        def libraries = toml.get("libraries").toMap()
        libraries.each { k, v ->
            sb.append("\n        builder.library('${k}', '${v.get("module").split(':')[0]}', '${v.get("module").split(':')[1]}').versionRef('${v.get("version").get("ref")}')")
        }

        def plugins = toml.get("plugins").toMap()
        plugins.each { k, v ->
            sb.append("\n        builder.plugin('${k}', '${v.get("id")}').versionRef('${v.get("version").get("ref")}')")
        }

        sb.append("\n        builder.version('conventions', '${project.version}')")
        sb.append("\n        builder.plugin('conventions_project', 'dev.lukebemish.conventions.project').versionRef('conventions')")
        sb.append("\n        builder.plugin('conventions_settings', 'dev.lukebemish.conventions.settings').versionRef('conventions')")

        def bundles = toml.get("bundles").toMap()
        bundles.each { k, v ->
            sb.append("\n        builder.bundle('${k}', [${(v.toList() as List).collect {"'$it'"}.join(', ')}])")
        }

        def targetFile = "${outDir}/dev/lukebemish/conventions/Versioning.groovy"
        def content = file(targetFile).getText()
        content = content.replace(
            "// FILL-TEMPLATE",
            sb.toString()
        )
        file(targetFile).write(content)
    }
}
