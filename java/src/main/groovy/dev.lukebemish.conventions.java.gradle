plugins {
    id 'java-library'
    id 'maven-publish'
    id 'dev.lukebemish.immaculate'
	id 'dev.lukebemish.conventions'
}

dependencies {
    compileOnly cLibs.bundles.compileonly
    annotationProcessor cLibs.bundles.annotationprocessor
}

immaculate {
	workflows.register('java') {
		java()
		custom('jspecifyAnnotatoins') {
			it.replace('org.jetbrains.annotations.Nullable', 'org.jspecify.annotations.Nullable')
		}
		custom('noNotNull') {
			if (it.contains('@NotNull') || it.contains('@Nonnull')) {
				throw new GradleException('@NotNull and @Nonnull are disallowed.')
			}
		}
		trailingNewline()
		noTrailingSpaces()
		noTabs(4)
		googleFixImports()
		toggleOn.set 'CHECKSTYLE:ON'
		toggleOff.set 'CHECKSTYLE:OFF'
	}
	workflows.register('packageInfo') {
		def sourceDirs = files()
		sourceSets.configureEach { sourceDirs.from(it.getAllSource()) }
		files.from(sourceDirs.filter { it.name == 'package-info.java' })

		custom('packageIsNullMarked') {
			if (!it.contains('@NullMarked')) {
				throw new GradleException('Packages should be null-marked')
			}
		}
	}
}
